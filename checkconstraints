--Check Constraints - Checks the incoming data to see if it meets certain criteria
-- Basic value checks 
--Pattern Matching(postalCode,phone)
--constraint ck_name check (condition)
--Wildcards
-- % - any number of any character(s)
-- _ - any single character
--when using wildcards you MUST use like instead of =
-- default constraint
--a value that is placed in a column if no value is provided

Drop table CheckConstraint

Create table CheckConstraint
(
ConstraintID int not null identity (1,1) constraint pk_CheckConstraint primary key clustered,
ConstraintType char (3) not null,
PurchaseDate datetime not null,
--Cost must be >=0
Cost smallmoney not null
constraint ck_validCost check (Cost >=0),
constraint df_Cost default 1,
-- sellPrice must be between 0 and 100
--SellPrice must be at least double the cost
SellPrice smallmoney not null
--SellPrice smallmoney not null constraint ck_validSellPrice check (Sellprice >=0 and Sellprice <= 100),
 constraint ck_validSellPrice check (Sellprice between 0 and 100),
--Active must be y or n
--Active must be a,b,c,d,e,f or g
--Active must be a,b,c,d,e,f,g,y, or z
active char(1) not null 
--constraint ck_validActive check (active = 'y' or active ='n'),
constraint ck_validActive check (active between 'a' and 'g' or active = 'j' or active = 'z'  ),
--Code must start with s
-- Code must start with a and end with z
--Code must start with a, have any 2 characters, then an r and anything after that
code varchar (30) not null
 --constraint ck_validCode check (Code like 's%'  )  ,
 --constraint ck_validCode check (Code like 'a%z'),
 constraint ck_validCode check (Code like 'a__r%' ),
identifier varchar (30) not null,
--(###)###-#### first digit of area code and phone number cannot be 0
PhoneNumber char (13) not null 
constraint ck_validPhone check (PhoneNumber like '([1-9][0-9][0-9])[1-9][0-9][0-9]-[0-9][0-9][0-9][0-9]'),
--L#L #L#
PostalCode char(7) not null
constraint ck_validPostalCode check ( PostalCode like '[a-z][0-9][a-z] [0-9][a-z][0-9]'),
constraint ck_validProfit check (sellPrice >= cost * 2)
)

 insert into CheckConstraint (ConstraintType, PurchaseDate,Cost, SellPrice, active, code, identifier,PhoneNumber , PostalCode)
 values ('abc', 'jan 1 2021', default,25, 'j', 'almrwhatthehecl', 'hijklmnop', '(711)505-1122', 'T5C 2H3')
 select * from CheckConstraint
 --exercist
 --check constraint on identifier
 --start with letter between g and k
 --any 3 characters
 --number between 6 an 8
 --any number of characters
 -- Hello
 --any 2 numbers
 --Ending in World
